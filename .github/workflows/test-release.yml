name: Test & Release
on:
  push:
    branches-ignore:
      - 'gh-pages'
      - 'depfu/**'
      - 'dependabot/**'
      - 'template-updater/**'
  pull_request: null

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.repository != 'sebbo2002/js-template' && (contains(toJson(github.event.commits.*.message), '[skip ci]') == false || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        node: [18.x, 20.x, 22.x, current]
    steps:
      - name: ☁️ Checkout Project
        uses: actions/checkout@v4
      - name: 🔧 Set up Python
        uses: actions/setup-python@v5
        with:
          # https://github.com/aio-libs/aiohttp/issues/7739#issuecomment-1773868351
          python-version: 3.11
      - name: 🔧 Setup pip cache
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip
      - name: 📦 Install pyatv
        run: pip install pyatv
      - name: 🔧 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: 📦 Install dependencies
        run: npm ci
      - name: ⏳ Run tests
        run: npm run test

  coverage:
    name: Code Coverage / Lint
    runs-on: ubuntu-latest
    if: github.repository != 'sebbo2002/js-template' && (contains(toJson(github.event.commits.*.message), '[skip ci]') == false || github.ref == 'refs/heads/main')
    steps:
      - name: ☁️ Checkout Project
        uses: actions/checkout@v4
      - name: 🔧 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: 🔧 Setup pip cache
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip
      - name: 📦 Install pyatv
        run: pip install pyatv
      - name: 🔧 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: 📦 Install dependencies
        run: npm ci
      - name: 🔍 Run linter
        run: npm run lint
      - name: ⚙️ Build project
        run: npm run build-all

  license-checker:
    name: License Checker
    runs-on: ubuntu-latest
    if: contains(toJson(github.event.commits.*.message), '[skip ci]') == false || github.ref == 'refs/heads/main'
    steps:
      - name: ☁️ Checkout Project
        uses: actions/checkout@v4
      - name: 🔧 Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
      - name: 📦 Install dependencies
        run: npm ci
      - name: 🕵️‍♀️ Run license checker
        run: npm run license-check

  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    needs:
      - coverage
      - tests
      - license-checker
    if: ${{ github.repository != 'sebbo2002/js-template' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') }}
    steps:
      - name: ☁️ Checkout Project
        uses: actions/checkout@v4
      - name: 🔧 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: 🔧 Setup pip cache
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip
      - name: 📦 Install pyatv
        run: pip install pyatv
      - name: 🔧 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: 📦 Install dependencies
        run: npm ci
      - name: 📂 Create docs folder
        run: mkdir ./docs
      - name: 🪄 Run semantic-release
        run: BRANCH=${GITHUB_REF#refs/heads/} npx semantic-release
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_OWNER: ${{ github.repository_owner }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
      - name: 🔃 Merge main back into develop
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          source_ref: 'main'
          target_branch: 'develop'
          commit_message_template: 'Merge branch {source_ref} into {target_branch} [skip ci]'
